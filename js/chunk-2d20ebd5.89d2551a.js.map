{"version":3,"sources":["webpack:///./src/pages/2019/SclngApchAirFlow.md?af35","webpack:///./src/pages/2019/SclngApchAirFlow.md"],"names":["render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","staticStyle","text-align","pre","attrs","v-pre","class","script","component","Object","componentNormalizer","__webpack_exports__"],"mappings":"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","file":"js/chunk-2d20ebd5.89d2551a.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('h1',[_vm._v(\"Scaling Out DAG Creation With Apache Airflow\")]),_c('p',[_vm._v(\"One of the more difficult tasks within the Data Science community is not designing a model to a well-constructed\\nbusiness problem or developing the code-base to operate in a scalable environment, but, rather, arranging the tasks in\\nthe ETL, or in the Data Science pipeline, executing the model on a periodic basis and automating everything in-between.\\nThis is where Apache Airflow comes to the rescue!  With the Airflow UI to display the task in a graph form, and with the\\nability to programmatically define your workflow to increase traceability, it is much easier to define and configure\\nyour Data Science workflow in production.\")]),_c('p',[_vm._v(\"There is still one difficulty that remains, though.  There are circumstances when the same modelling, monolithic,\\nprocess is utilized and applied to different data sources.  To increase performance, it is better to have each of\\nthese processes run concurrently, rather than add them to the same dag.\")]),_c('p',[_vm._v(\"No problem, let us simply create a dag for each process, all with similar tasks, and schedule them to run at the same\\ntime.  If we were to follow along software development principle DRY, is there a way to create multiple different dags\\nwith the same-type tasks without having to manually create them?\")]),_c('h2',[_vm._v(\"Configurable Task Assignments To a Specific Dag\")]),_c('p',[_vm._v(\"Firstly, let us assume our initial dag looks like this:\")]),_c('p',{staticStyle:{\"text-align\":\"left\"}},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"v-pre\":\"\",\"class\":\"language-python\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" datetime \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" datetime, timedelta\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" dateutil.relativedelta \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" relativedelta\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" time \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" sleep\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" airflow \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" DAG\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" airflow.operators.python_operator \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" PythonOperator\\n\\ndefault_args = {\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"depends_on_past\\\"\")]),_vm._v(\": \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-literal\"}},[_vm._v(\"False\")]),_vm._v(\",\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"start_date\\\"\")]),_vm._v(\": datetime.now() - relativedelta(days=\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"1\")]),_vm._v(\"),\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"retries\\\"\")]),_vm._v(\": \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"1\")]),_vm._v(\",\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"retry_delay\\\"\")]),_vm._v(\": timedelta(seconds=\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"120\")]),_vm._v(\"),\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"email_on_failure\\\"\")]),_vm._v(\": \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-literal\"}},[_vm._v(\"False\")]),_vm._v(\"\\n}\\n\\ndag = DAG(\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"dummy\\\"\")]),_vm._v(\", default_args=default_args, schedule_interval=\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-literal\"}},[_vm._v(\"None\")]),_vm._v(\")\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-function\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"def\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-title\"}},[_vm._v(\"tmp\")]),_c('span',{pre:true,attrs:{\"class\":\"hljs-params\"}},[_vm._v(\"()\")]),_vm._v(\":\")]),_vm._v(\"\\n    sleep(\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"60\")]),_vm._v(\")\\n    \\n    print(\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"Dag passed!\\\"\")]),_vm._v(\")\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"return\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-literal\"}},[_vm._v(\"None\")]),_vm._v(\"\\n\\nt1 = PythonOperator(python_callable=tmp, task_id=\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"time\\\"\")]),_vm._v(\", dag=dag)\\n\")])])]),_c('p',[_vm._v(\"The purpose of this dag is to simply sleep and then print a statement.  This is a very simple dag, but let us assume\\nthis would represent our Data Science workflow.  If this was the only Data Science workflow we were doing to deploy into\\nproduction, we would most probably become satisfied.\")]),_c('p',[_vm._v(\"However, what if, as asked earilier, we want to create multiple dags with the same-type tasks without having to\\nmanually create them?  For example, with the example of our initial dag above, what if we wanted to configure how many\\nseconds we want to sleep before printing a statement?\")]),_c('p',[_vm._v(\"This is where we need to understand which parts of our process is configurable, and then allow those to become\\nvariables in our process.  Lets take another stab at our initial dag:\")]),_c('p',{staticStyle:{\"text-align\":\"left\"}},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"v-pre\":\"\",\"class\":\"language-python\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" datetime \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" datetime, timedelta\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" dateutil.relativedelta \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" relativedelta\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" time \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" sleep\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" airflow \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" DAG\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" airflow.operators.python_operator \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" PythonOperator\\n\\ndefault_args = {\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"depends_on_past\\\"\")]),_vm._v(\": \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-literal\"}},[_vm._v(\"False\")]),_vm._v(\",\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"start_date\\\"\")]),_vm._v(\": datetime.now() - relativedelta(days=\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"1\")]),_vm._v(\"),\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"retries\\\"\")]),_vm._v(\": \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"1\")]),_vm._v(\",\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"retry_delay\\\"\")]),_vm._v(\": timedelta(seconds=\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"120\")]),_vm._v(\"),\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"email_on_failure\\\"\")]),_vm._v(\": \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-literal\"}},[_vm._v(\"False\")]),_vm._v(\"\\n}\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-function\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"def\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-title\"}},[_vm._v(\"create_dag\")]),_c('span',{pre:true,attrs:{\"class\":\"hljs-params\"}},[_vm._v(\"(dag_id, seconds=\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"60\")]),_vm._v(\")\")]),_vm._v(\":\")]),_vm._v(\"\\n    dag = DAG(dag_id, default_args=default_args, schedule_interval=\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-literal\"}},[_vm._v(\"None\")]),_vm._v(\")\\n    \\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-function\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"def\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-title\"}},[_vm._v(\"tmp\")]),_c('span',{pre:true,attrs:{\"class\":\"hljs-params\"}},[_vm._v(\"()\")]),_vm._v(\":\")]),_vm._v(\"\\n        sleep(seconds)\\n        \\n        print(\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"Dag passed!\\\"\")]),_vm._v(\")\\n        \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"return\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-literal\"}},[_vm._v(\"None\")]),_vm._v(\"\\n    \\n    t1 = PythonOperator(python_callable=tmp, task_id=\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"time\\\"\")]),_vm._v(\", dag=dag)\\n    \\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"return\")]),_vm._v(\" dag\\n    \\nglobals()[\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"dummy_dag\\\"\")]),_vm._v(\"] = create_dag(\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"dummy\\\"\")]),_vm._v(\", \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"60\")]),_vm._v(\")\\n\")])])]),_c('p',[_vm._v(\"When a variable is added to the global dictionary in a python script, it is rendered and treated as a variable that was\\ncreated in the global-scope, even if it was initially created in the function-scope.  Now you can create multiple dags, with\\nsimilar tasks, with ease. Now, what if, there are only slight variations in the task assignment for some dags?\")]),_c('p',[_vm._v(\"Consider this example, where we initial define this in a python module called task_assigner.py\")]),_c('p',{staticStyle:{\"text-align\":\"left\"}},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"v-pre\":\"\",\"class\":\"language-python\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" functools \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" reduce\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" airflow.operators \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" *\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-comment\"}},[_vm._v(\"# this will be just a small subset of operators that we will define\")]),_vm._v(\"\\ntask_dict = {\\n   \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"external_task\\\"\")]),_vm._v(\": ExternalTaskSensor,\\n   \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"'python_operator'\")]),_vm._v(\": PythonOperator,\\n   \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"'trigger_dag'\")]),_vm._v(\": TriggerDagOperator,\\n   \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"bash\\\"\")]),_vm._v(\": BashOperator\\n}\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-class\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"class\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-title\"}},[_vm._v(\"TaskAssigner\")]),_vm._v(\":\")]),_vm._v(\"\\n\\n   \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-function\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"def\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-title\"}},[_vm._v(\"__init__\")]),_c('span',{pre:true,attrs:{\"class\":\"hljs-params\"}},[_vm._v(\"(self, parent_dag)\")]),_vm._v(\":\")]),_vm._v(\"\\n       self.parent_dag = parent_dag\\n   \\n   \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-function\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"def\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-title\"}},[_vm._v(\"define_tasks\")]),_c('span',{pre:true,attrs:{\"class\":\"hljs-params\"}},[_vm._v(\"(self, task_params)\")]),_vm._v(\":\")]),_vm._v(\"\\n   \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"\\\"\\\"\\n   This will use the task_dict to help map the task define to the appropriate task with the correct parameters\\n    \\n   :param tsk_name: The unique name of the task\\n   :type: str\\n   :param task_params: The parameters for all the task\\n   :type: dict\\n   \\\"\\\"\\\"\")]),_vm._v(\"\\n   \\n       defined_tsk_dict = {}\\n   \\n       \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"for\")]),_vm._v(\" tsk \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"in\")]),_vm._v(\" task_params.keys():\\n           dag_type = task_params[tsk][\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"type\\\"\")]),_vm._v(\"]\\n           params = task_params[tsk][\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"params\\\"\")]),_vm._v(\"]\\n           params[\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"dag\\\"\")]),_vm._v(\"] = self.parent_dag\\n           params[\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"task_id\\\"\")]),_vm._v(\"] = tsk\\n           \\n           defined_tsk_dict[tsk] = task_dict[dag_type](**params)\\n   \\n       \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"return\")]),_vm._v(\" defined_tsk_dict\\n       \\n   \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-function\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"def\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-title\"}},[_vm._v(\"map_task\")]),_c('span',{pre:true,attrs:{\"class\":\"hljs-params\"}},[_vm._v(\"(self, tsk_names, defined_task_dict)\")]),_vm._v(\":\")]),_vm._v(\"\\n   \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"\\\"\\\"\\n   This will help map the sequence of the tasks to the appropriate defined task\\n   \\n   :param tsk_names: The sequence of the tasks to run\\n   :type tsk_names: str\\n   :param defined_task_dict: The dictionary of defined tasks\\n   :type defined_task_dict: dict\\n   \\\"\\\"\\\"\")]),_vm._v(\"\\n   \\n       res_lst = []\\n   \\n       \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"for\")]),_vm._v(\" tsks \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"in\")]),_vm._v(\" tsk_names:\\n           \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"if\")]),_vm._v(\" isinstance(tsks, list):\\n               res_lst.append(self.map_task(tsks, defined_task_dict))\\n           \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"elif\")]),_vm._v(\" isinstance(tsks, str):\\n               res_lst.append(defined_task_dict[tsks])\\n           \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"else\")]),_vm._v(\":\\n               \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"raise\")]),_vm._v(\" ValueError\\n       \\n       \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"return\")]),_vm._v(\" res_lst    \\n       \\n   \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-function\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"def\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-title\"}},[_vm._v(\"run\")]),_c('span',{pre:true,attrs:{\"class\":\"hljs-params\"}},[_vm._v(\"(self, task_sequence, task_params)\")]),_vm._v(\":\")]),_vm._v(\"\\n   \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"\\\"\\\"\\n   This will assign each task in the sequence, with the right parameters, to the parent dag\\n   \\n   :param task_sequence: This will be a list of, or a list of list, of strings\\n   :type task_sequence: List[List[str]] or List[List[List[str]]], or something in between.\\n   :param task_params: The parameters for all the task\\n   :type task_params: dict\\n   \\\"\\\"\\\"\")]),_vm._v(\"\\n   \\n       defined_task_dict = self.define_tasks(task_params)\\n   \\n       \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-comment\"}},[_vm._v(\"# this is a List[List[Tasks]] or a List[List[List[Tasks]]]\")]),_vm._v(\"\\n       run_lst = self.map_task(task_sequence, defined_task_dict)\\n       \\n       \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-function\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"def\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-title\"}},[_vm._v(\"tmf\")]),_c('span',{pre:true,attrs:{\"class\":\"hljs-params\"}},[_vm._v(\"(tsks)\")]),_vm._v(\":\")]),_vm._v(\"\\n           reduce(\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"lambda\")]),_vm._v(\" tsk1, tsk2: tsk1 >> tsk2, tsks[\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"1\")]),_vm._v(\":], tsks[\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"0\")]),_vm._v(\"])\\n       \\n       list(map(tmp, run_lst))\\n       \\n       \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"return\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-literal\"}},[_vm._v(\"None\")]),_vm._v(\"\\n\")])])]),_c('p',[_vm._v(\"Then in another script you use the TaskAssigner, lets say in dag.py\")]),_c('p',{staticStyle:{\"text-align\":\"left\"}},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"v-pre\":\"\",\"class\":\"language-python\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" json\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" datetime \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" datetime, timedelta\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" dateutil.relativedelta \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" relativedelta\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" time \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" sleep\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" airflow \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" DAG\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" airflow.operators.python_operator \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" PythonOperator\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" task_assigner \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" TaskAssigner\\n\\ndefault_args = {\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"depends_on_past\\\"\")]),_vm._v(\": \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-literal\"}},[_vm._v(\"False\")]),_vm._v(\",\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"start_date\\\"\")]),_vm._v(\": datetime.now() - relativedelta(days=\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"1\")]),_vm._v(\"),\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"retries\\\"\")]),_vm._v(\": \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"1\")]),_vm._v(\",\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"retry_delay\\\"\")]),_vm._v(\": timedelta(seconds=\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"120\")]),_vm._v(\"),\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"email_on_failure\\\"\")]),_vm._v(\": \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-literal\"}},[_vm._v(\"False\")]),_vm._v(\"\\n}\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-function\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"def\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-title\"}},[_vm._v(\"create_dag\")]),_c('span',{pre:true,attrs:{\"class\":\"hljs-params\"}},[_vm._v(\"(dag_id, dag_sequence, dag_params)\")]),_vm._v(\":\")]),_vm._v(\"\\n    dag = DAG(dag_id, default_args=default_args, schedule_interval=\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-literal\"}},[_vm._v(\"None\")]),_vm._v(\")\\n    \\n    tsk_assign = TaskAssigner(dag)\\n    \\n    tsk_assign.run(dag_sequence, dag_params)\\n    \\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"return\")]),_vm._v(\" dag\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"with\")]),_vm._v(\" open(\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"dag_configs.json\\\"\")]),_vm._v(\") \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"as\")]),_vm._v(\" f:\\n    config = json.load(f)\\n    \\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"for\")]),_vm._v(\" dg_id \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"in\")]),_vm._v(\" config.keys():\\n    globals()[dg_id] = create_dag(dg_id, config[dg_id][\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"dag_sequence\\\"\")]),_vm._v(\"], config[dg_id][\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"dag_params\\\"\")]),_vm._v(\"])\\n\\n\")])])]),_c('p',[_vm._v(\"The dag_configs.json used here is:\")]),_c('p',{staticStyle:{\"text-align\":\"left\"}},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"v-pre\":\"\",\"class\":\"language-json5\"}},[_vm._v(\"\\n{\\n  \\\"dummy\\\": {\\n  \\\"dag_sequence\\\": [[\\\"dummy\\\"]],\\n  \\\"dag_params\\\": {\\n  \\\"dummy\\\": {\\n  \\\"type\\\": \\\"bash\\\",\\n  \\\"params\\\": {\\\"bash_command\\\": \\\"sleep 60\\\"}\\n  }\\n  }\\n  }\\n\\n}\\n\\n\\n\")])])]),_c('h2',[_vm._v(\"Additional Topics\")]),_c('p',[_vm._v(\"Now, we discussed how to define multiple dags utilizing OOP, which is DRY compliant. However, this is assuming\\neach dag is independent of each other, which is not normally the case within practice.  There are cases where\\neach dag is possibly dependent on another dag. In a future article, we will discuss this in more details.\")]),_c('p',[_vm._v(\"As always, happy coding!\")]),_c('h2',[_vm._v(\"Acknowledgements\")]),_c('p',[_vm._v(\"Author: Edward Turner\")]),_c('p',[_vm._v(\"Published Date: June 21, 2019\")])])}]\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./SclngApchAirFlow.md?vue&type=template&id=5c3f4a94&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}